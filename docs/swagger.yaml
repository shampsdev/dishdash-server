definitions:
  domain.Coordinate:
    properties:
      lat:
        type: number
      lon:
        type: number
    type: object
  domain.Place:
    properties:
      address:
        type: string
      description:
        type: string
      id:
        type: integer
      image:
        items:
          type: string
        type: array
      location:
        $ref: '#/definitions/domain.Coordinate'
      priceAvg:
        type: integer
      reviewCount:
        type: integer
      reviewRating:
        type: number
      shortDescription:
        type: string
      source:
        type: string
      tags:
        items:
          $ref: '#/definitions/domain.Tag'
        type: array
      title:
        type: string
      updatedAt:
        type: string
      url:
        type: string
    type: object
  domain.Tag:
    properties:
      icon:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  domain.User:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      telegram:
        type: integer
      updatedAt:
        type: string
    type: object
  lobby.nearestLobbyOutput:
    properties:
      distance:
        type: number
      lobby:
        $ref: '#/definitions/usecase.LobbyOutput'
    type: object
  usecase.FindLobbyInput:
    properties:
      dist:
        type: number
      location:
        $ref: '#/definitions/domain.Coordinate'
    type: object
  usecase.LobbyOutput:
    properties:
      createdAt:
        type: string
      id:
        type: string
      location:
        $ref: '#/definitions/domain.Coordinate'
      priceAvg:
        type: integer
      state:
        type: string
      tags:
        items:
          $ref: '#/definitions/domain.Tag'
        type: array
      users:
        items:
          $ref: '#/definitions/domain.User'
        type: array
    type: object
  usecase.SaveLobbyInput:
    properties:
      location:
        $ref: '#/definitions/domain.Coordinate'
      priceAvg:
        type: integer
    type: object
  usecase.SavePlaceInput:
    properties:
      address:
        type: string
      description:
        type: string
      images:
        items:
          type: string
        type: array
      location:
        $ref: '#/definitions/domain.Coordinate'
      priceMin:
        type: integer
      reviewCount:
        type: integer
      reviewRating:
        type: number
      shortDescription:
        type: string
      source:
        type: string
      tags:
        items:
          type: integer
        type: array
      title:
        type: string
      url:
        type: string
    type: object
  usecase.UpdatePlaceInput:
    properties:
      address:
        type: string
      description:
        type: string
      id:
        type: integer
      images:
        items:
          type: string
        type: array
      location:
        $ref: '#/definitions/domain.Coordinate'
      priceMin:
        type: integer
      reviewCount:
        type: integer
      reviewRating:
        type: number
      shortDescription:
        type: string
      source:
        type: string
      tags:
        items:
          type: integer
        type: array
      title:
        type: string
      url:
        type: string
    type: object
info:
  contact: {}
  description: Manage cards, lobbies, swipes
  title: DishDash server
  version: "2.0"
paths:
  /lobbies:
    post:
      consumes:
      - application/json
      description: Create a new lobby in the database
      parameters:
      - description: lobby data
        in: body
        name: lobby
        required: true
        schema:
          $ref: '#/definitions/usecase.SaveLobbyInput'
      produces:
      - application/json
      responses:
        "200":
          description: Saved lobby
          schema:
            $ref: '#/definitions/usecase.LobbyOutput'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a lobby
      tags:
      - lobbies
  /lobbies/{id}:
    delete:
      consumes:
      - application/json
      description: delete a lobby in the database
      parameters:
      - description: lobby id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: delete a lobby
      tags:
      - lobbies
    get:
      consumes:
      - application/json
      description: Get a lobby from the database by ID
      parameters:
      - description: lobby ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: lobby data
          schema:
            $ref: '#/definitions/usecase.LobbyOutput'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get lobby by ID
      tags:
      - lobbies
  /lobbies/find:
    post:
      consumes:
      - application/json
      description: shortcut for find nearest + create if not close enough
      parameters:
      - description: Location + Distance (in metres)
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/usecase.FindLobbyInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usecase.LobbyOutput'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/usecase.LobbyOutput'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: find lobby
      tags:
      - lobbies
  /lobbies/nearest:
    post:
      consumes:
      - application/json
      description: find nearest lobby in the database
      parameters:
      - description: Location
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/domain.Coordinate'
      produces:
      - application/json
      responses:
        "200":
          description: Nearest lobby + Distance (in metres)
          schema:
            $ref: '#/definitions/lobby.nearestLobbyOutput'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: find nearest lobby
      tags:
      - lobbies
  /place/by_url:
    get:
      consumes:
      - application/json
      description: Get a place from the database by url
      parameters:
      - description: place url
        in: query
        name: url
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: place data
          schema: {}
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get place by url
      tags:
      - places
  /places:
    get:
      consumes:
      - application/json
      description: Get a list of places from the database
      produces:
      - application/json
      responses:
        "200":
          description: List of places
          schema:
            items:
              $ref: '#/definitions/domain.Place'
            type: array
        "500":
          description: Internal Server Error
      summary: Get places
      tags:
      - places
    post:
      consumes:
      - application/json
      description: Create a new place in the database
      parameters:
      - description: Place data
        in: body
        name: place
        required: true
        schema:
          $ref: '#/definitions/usecase.SavePlaceInput'
      produces:
      - application/json
      responses:
        "200":
          description: Saved place
          schema:
            $ref: '#/definitions/domain.Place'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a place
      tags:
      - places
    put:
      consumes:
      - application/json
      description: Update a place with same id in the database
      parameters:
      - description: Place data
        in: body
        name: place
        required: true
        schema:
          $ref: '#/definitions/usecase.UpdatePlaceInput'
      produces:
      - application/json
      responses:
        "200":
          description: Updated place
          schema:
            $ref: '#/definitions/domain.Place'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Update a place
      tags:
      - places
  /places/tag:
    put:
      consumes:
      - application/json
      description: Update an existing tag in the database
      parameters:
      - description: Tag data
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/domain.Tag'
      produces:
      - application/json
      responses:
        "200":
          description: Updated tag
          schema:
            $ref: '#/definitions/domain.Tag'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Update a tag
      tags:
      - places
  /places/tag/{id}:
    delete:
      description: Delete an existing tag from the database
      parameters:
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Tag deleted
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Delete a tag
      tags:
      - places
  /places/tags:
    get:
      consumes:
      - application/json
      description: Get a list of tags from the database
      produces:
      - application/json
      responses:
        "200":
          description: List of tags
          schema:
            items:
              $ref: '#/definitions/domain.Tag'
            type: array
        "500":
          description: Internal Server Error
      summary: Get tags
      tags:
      - places
    post:
      consumes:
      - application/json
      description: Create a new tag in the database
      parameters:
      - description: Tag data
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/domain.Tag'
      produces:
      - application/json
      responses:
        "200":
          description: Saved tag
          schema:
            $ref: '#/definitions/domain.Tag'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a tag
      tags:
      - places
  /users:
    get:
      consumes:
      - application/json
      description: Get a list of users from the database
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            items:
              $ref: '#/definitions/domain.User'
            type: array
        "500":
          description: Internal Server Error
      summary: Get users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Save a new user in the database
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "200":
          description: Saved user
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Save a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update an existing user in the database
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "200":
          description: Updated user
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Update a user
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get a user from the database by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User data
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get user by ID
      tags:
      - users
  /users/telegram/{telegram}:
    get:
      consumes:
      - application/json
      description: Get a user from the database by Telegram number
      parameters:
      - description: Telegram number
        in: path
        name: telegram
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User data
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get user by Telegram
      tags:
      - users
swagger: "2.0"
